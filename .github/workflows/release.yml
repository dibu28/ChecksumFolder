name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: softprops/action-gh-release@v2
        id: create_release
        with:
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            zig: x86_64-linux-gnu
          - goos: linux
            goarch: arm64
            zig: aarch64-linux-gnu
          - goos: linux
            goarch: arm
            goarm: 7
            alias: mv78230
            zig: arm-linux-gnueabihf
          - goos: linux
            goarch: ppc64le
            zig: powerpc64le-linux-gnu
          - goos: linux
            goarch: s390x
            zig: s390x-linux-gnu
          - goos: windows
            goarch: amd64
            zig: x86_64-windows-gnu
          - goos: windows
            goarch: arm64
            zig: aarch64-windows-gnu
          - goos: windows
            goarch: 386
            zig: x86-windows-gnu
          - goos: darwin
            goarch: amd64
            zig: x86_64-macos
          - goos: darwin
            goarch: arm64
            zig: aarch64-macos
          - goos: freebsd
            goarch: amd64
            zig: x86_64-freebsd
          - goos: freebsd
            goarch: arm64
            zig: aarch64-freebsd
          - goos: openbsd
            goarch: amd64
            zig: x86_64-openbsd
          - goos: netbsd
            goarch: amd64
            zig: x86_64-netbsd
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
      - name: Set up Zig
        uses: mlugg/setup-zig@v2.0.4
      - name: Build binary
        run: |
          NAME=CheckSumFolder-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ -n "${{ matrix.alias }}" ]; then
            NAME=CheckSumFolder-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.alias }}
          fi
          if [ -n "${{ matrix.goarm }}" ]; then
            NAME="${NAME}v${{ matrix.goarm }}"
          fi
          if [ "${{ matrix.goos }}" = "windows" ]; then
            NAME="$NAME.exe"
          fi
          case "${{ matrix.goos }}" in
            linux|windows)
              export CGO_ENABLED=1
              export CC="zig cc -target ${{ matrix.zig }}"
              export CXX="zig c++ -target ${{ matrix.zig }}"
              # Clear any cached compiler flags that might include -mcpu
              unset CFLAGS CXXFLAGS CGO_CFLAGS CGO_CXXFLAGS
              if [ "${{ matrix.goarch }}" = "arm" ]; then
                # Use a specific ARMv7 CPU that Clang accepts
                export CGO_CFLAGS="-mcpu=cortex_a9 -mfpu=neon"
                export CGO_CXXFLAGS="$CGO_CFLAGS"
              fi
              ;;
            *)
              # Cross-compiling to other operating systems uses the pure Go fallback
              export CGO_ENABLED=0
              ;;
          esac
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=${{ matrix.goarm }} GOARM64=${{ matrix.goarm64 }} go build -o "$NAME" .
          echo "ASSET_NAME=$NAME" >> $GITHUB_ENV
      - name: Upload binary
        run: gh release upload "${{ github.ref_name }}" "${{ env.ASSET_NAME }}" --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
